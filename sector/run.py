


double_datas = [{
  "testdic": {
    "prec": 0.9001189060642093,
    "rec": 0.7577577577577578,
    "f1": 0.8228260869565218,
    "bacc": 0.8697928864505393
  },
  "devdic": {
    "prec": 0.6545768566493955,
    "rec": 0.5589970501474927,
    "f1": 0.6030230708035005,
    "bacc": 0.7566518264217015
  },
  "losses": [
    7110.542909749434,
    5137.176332781441
  ],
  "desc": "2:2 Double_Sentence_CLS, flrate=0"
},
{
  "testdic": {
    "prec": 1,
    "rec": 0.6266266266266266,
    "f1": 0.7704615384615385,
    "bacc": 0.8133133133133132
  },
  "devdic": {
    "prec": 0.9804878048780488,
    "rec": 0.29646017699115046,
    "f1": 0.4552661381653455,
    "bacc": 0.6477731545225343
  },
  "losses": [
    8362.54152142303,
    6388.951750492532
  ],
  "desc": "2:2 Double_Sentence_CLS, flrate=0"
},
{
  "testdic": {
    "prec": 0.895662368112544,
    "rec": 0.7647647647647647,
    "f1": 0.8250539956803457,
    "bacc": 0.8727555570714034
  },
  "devdic": {
    "prec": 0.7306034482758621,
    "rec": 0.5,
    "f1": 0.5936952714535902,
    "bacc": 0.735720813342472
  },
  "losses": [
    7095.163628809038,
    7272.169616238039
  ],
  "desc": "2:2 Double_Sentence_CLS, flrate=0"
},
{
  "testdic": {
    "prec": 0.9316022799240026,
    "rec": 0.7362362362362362,
    "f1": 0.8224769359798715,
    "bacc": 0.8622771229856141
  },
  "devdic": {
    "prec": 0.780952380952381,
    "rec": 0.4837758112094395,
    "f1": 0.5974499089253187,
    "bacc": 0.7313784242247792
  },
  "losses": [
    7535.903145493765,
    5441.808580169338
  ],
  "desc": "2:2 Double_Sentence_CLS, flrate=0"
},
{
  "testdic": {
    "prec": 0.993421052631579,
    "rec": 0.6801801801801802,
    "f1": 0.8074866310160428,
    "bacc": 0.8396033404957148
  },
  "devdic": {
    "prec": 0.9163498098859315,
    "rec": 0.3554572271386431,
    "f1": 0.512221041445271,
    "bacc": 0.6752154767175966
  },
  "losses": [
    7174.63851182902,
    5200.972930922624
  ],
  "desc": "2:2 Double_Sentence_CLS, flrate=0"
},
{
  "testdic": {
    "prec": 0.8620082207868467,
    "rec": 0.7347347347347347,
    "f1": 0.7932991083490948,
    "bacc": 0.8546577946253446
  },
  "devdic": {
    "prec": 0.5935483870967742,
    "rec": 0.5427728613569321,
    "f1": 0.5670261941448382,
    "bacc": 0.7425995903768896
  },
  "losses": [
    7409.50640684471,
    5211.504162163794
  ],
  "desc": "2:2 Double_Sentence_CLS, flrate=0"
},
]

left_right_datas = [{
  "testdic": {
    "prec": 0.8763532763532763,
    "rec": 0.7697697697697697,
    "f1": 0.8196109778843592,
    "bacc": 0.8731488113316128
  },
  "devdic": {
    "prec": 0.6579406631762653,
    "rec": 0.556047197640118,
    "f1": 0.6027178257394085,
    "bacc": 0.7556338341410551
  },
  "losses": [
    6705.435110092134,
    4177.033804090373
  ],
  "desc": "左右池化，跑五次，和2vs2对比, flrate=0"
},
{
  "testdic": {
    "prec": 0.9642857142857143,
    "rec": 0.7162162162162162,
    "f1": 0.8219414129810453,
    "bacc": 0.8552416938301199
  },
  "devdic": {
    "prec": 0.8855218855218855,
    "rec": 0.387905604719764,
    "f1": 0.5394871794871795,
    "bacc": 0.6900688635890344
  },
  "losses": [
    6662.573991818877,
    4142.448828316119
  ],
  "desc": "左右池化，跑五次，和2vs2对比, flrate=0"
},
{
  "testdic": {
    "prec": 0.7957712638154734,
    "rec": 0.8288288288288288,
    "f1": 0.8119637165972053,
    "bacc": 0.8914290169022456
  },
  "devdic": {
    "prec": 0.49631190727081137,
    "rec": 0.6946902654867256,
    "f1": 0.5789797172710509,
    "bacc": 0.7927415229649758
  },
  "losses": [
    6733.502514963679,
    4400.167658648628
  ],
  "desc": "左右池化，跑五次，和2vs2对比, flrate=0"
},
{
  "testdic": {
    "prec": 0.9433719433719434,
    "rec": 0.7337337337337337,
    "f1": 0.8254504504504505,
    "bacc": 0.8621075374996414
  },
  "devdic": {
    "prec": 0.7181069958847737,
    "rec": 0.5147492625368731,
    "f1": 0.5996563573883161,
    "bacc": 0.7417246426917858
  },
  "losses": [
    6580.3796633508755,
    4178.9365173777915
  ],
  "desc": "左右池化，跑五次，和2vs2对比, flrate=0"
},
{
  "testdic": {
    "prec": 0.8938775510204081,
    "rec": 0.7672672672672672,
    "f1": 0.8257473740910315,
    "bacc": 0.8737904751695991
  },
  "devdic": {
    "prec": 0.6132231404958678,
    "rec": 0.5471976401179941,
    "f1": 0.578332034294622,
    "bacc": 0.7468681826361047
  },
  "losses": [
    6707.564587983623,
    4333.448989800207
  ],
  "desc": "左右池化，跑五次，和2vs2对比, flrate=0"
},
{
  "testdic": {
    "prec": 0.8745724059293044,
    "rec": 0.7677677677677678,
    "f1": 0.8176972281449894,
    "bacc": 0.8719855604658201
  },
  "devdic": {
    "prec": 0.6765249537892791,
    "rec": 0.5398230088495575,
    "f1": 0.6004922067268254,
    "bacc": 0.7499206431042396
  },
  "losses": [
    6722.739509095205,
    4368.866117107522
  ],
  "desc": "左右池化，跑五次，和2vs2对比, flrate=0"
},
{
  "testdic": {
    "prec": 0.9778085991678225,
    "rec": 0.7057057057057057,
    "f1": 0.8197674418604651,
    "bacc": 0.8511221876284072
  },
  "devdic": {
    "prec": 0.8413173652694611,
    "rec": 0.4144542772861357,
    "f1": 0.5553359683794465,
    "bacc": 0.701172763500276
  },
  "losses": [
    6640.006185412523,
    4315.684648919341
  ],
  "desc": "左右池化，跑五次，和2vs2对比, flrate=0"
},
]

single_datas = [
{
  "testdic": {
    "prec": 0.862390350877193,
    "rec": 0.7872872872872873,
    "f1": 0.8231292517006802,
    "bacc": 0.8800687382893981
  },
  "devdic": {
    "prec": 0.6262458471760798,
    "rec": 0.556047197640118,
    "f1": 0.5890624999999999,
    "bacc": 0.7523210628365087
  },
  "losses": [
    6972.804297693889,
    5114.6519891172065
  ],
  "desc": "1:1 Double_Sentence_CLS, flrate=0"
},
{
  "testdic": {
    "prec": 0.9790356394129979,
    "rec": 0.7012012012012012,
    "f1": 0.8171478565179353,
    "bacc": 0.8489781019526828
  },
  "devdic": {
    "prec": 0.8474025974025974,
    "rec": 0.38495575221238937,
    "f1": 0.5294117647058824,
    "bacc": 0.6871089019229641
  },
  "losses": [
    6986.633322476351,
    5033.6920641800825
  ],
  "desc": "1:1 Double_Sentence_CLS, flrate=0"
},
]

def analyse(datas, dicname = 'testdic'):
  precs = []
  recs = []
  f1s = []
  baccs = []
  for data in datas:
    precs.append(data[dicname]['prec'])
    recs.append(data[dicname]['rec'])
    f1s.append(data[dicname]['f1'])
    baccs.append(data[dicname]['bacc'])
  return precs, recs, f1s, baccs

